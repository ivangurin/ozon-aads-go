{
  "task": {
    "title": "Разбиение на три части (ДЗ 1)",
    "number": "2",
    "score": "10",
    "testExamples": [
      {
        "input": "5\n5 5 1 6 5\n",
        "output": "1 3\n"
      },
      {
        "input": "3\n1 2 3\n",
        "output": "2 2\n"
      },
      {
        "input": "1\n5\n",
        "output": "0 0\n"
      }
    ],
    "userStatus": {
      "key": "SOLVED",
      "label": "Решена"
    },
    "condition": "Разбиение Ломуто, как и разбиение Хоара, имеет проблемы при большом количестве одинаковых элементов. В этом задании нужно написать разбиение, которое решает эту проблему. Разбиение должно делить массив на три части: на элементы меньше опорного, равные опорному и большие опорного элемента. Верните индексы самого первого (левого) и самого последнего (правого) элементов среднего разбиения (где элементы равны опорному). В качестве опорного элемента выбирайте последний элемент.",
    "inputFormat": "stdin",
    "outputFormat": "stdout",
    "inputFormatDescription": "В первой строке на вход подается число $n$ $(1 \\le n \\le 10000)$ - количество элементов.\n\nВо второй строке передаются $n$ элементов $(1 \\le elem \\le 1000)$ через пробел.",
    "outputFormatDescription": "Выведите два числа. Индексы самого первого (левого) и самого последнего (правого) элементов среднего разбиения (где элементы равны опорному). Индексы нумеруются с нуля.\nРешение должно быть \"in-place\", без создания вспомогательных массивов.",
    "languages": ["CPP", "JAVA", "PYTHON", "CS", "GO"],
    "timeLimit": 1000,
    "memoryLimit": 256,
    "testArchiveUrl": null,
    "countOfSuccessSolvers": "14"
  }
}
